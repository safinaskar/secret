#!/bin/sh

{
	set -e

	. sh201708.sh

	usage(){
		cat << EOF
Usage: ${0##*/} [--] FILE
Exception safe
EOF
	}

	while [ "${1#-}" != "$1" ]; do
		case "$1" in
			"--help")
				usage
				exit 0
				;;
			"--")
				shift
				break
				;;
			*)
				usage >&2
				exit 1
				;;
		esac
	done

	[ $# != 1 ] && usage >&2 && exit 1

	FILE="$(sh201708_to_safe -- "$1")"

	sh201708_assert_cmd mktemp # prog:mktemp:coreutils
	sh201708_assert_cmd zip # prog:zip:zip

	[ "${FILE%.zip}" = "$FILE" ] && printf -- '%s\n' "${0##*/}: $FILE: not a *.zip" >&2 && exit 1

	[ -L "$FILE" ] && printf -- '%s\n' "${0##*/}: $FILE: symlink" >&2 && exit 1

	[ -e "$FILE" ] && printf -- '%s\n' "${0##*/}: $FILE: exists" >&2 && exit 1

	TEMP="$(mktemp --directory --tmpdir as-secret-mks-XXXXXX)"
	trap 'rm -r "$TEMP"' EXIT
	trap 'exit 1' $SH201708_SIGNALS

	: > "$TEMP/txt.txt"

	if ! zip --encrypt --junk-paths --quiet "$FILE" "$TEMP/txt.txt"; then
		printf -- '%s\n' "Если zip выдал ошибку \"Invalid command arguments (password verification failed)\", значит, пароль повторён неверно"
		exit 1
	fi

	exit 0
}
